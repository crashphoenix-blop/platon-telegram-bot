#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from fuel_consumption_analyzer import FuelConsumptionAnalyzer
import pandas as pd

def test_final_program():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã"""
    
    print("=" * 80)
    print("           –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –§–ò–ù–ê–õ–¨–ù–û–ô –í–ï–†–°–ò–ò –ü–†–û–ì–†–ê–ú–ú–´")
    print("=" * 80)
    
    # –°–æ–∑–¥–∞–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
    analyzer = FuelConsumptionAnalyzer()
    
    print("\n1. –ó–ê–ì–†–£–ó–ö–ê –î–ê–ù–ù–´–•")
    print("-" * 50)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ö—Ä–∞—Å—Å—É–ª—ã
    print("–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ö—Ä–∞—Å—Å—É–ª—ã...")
    krassula_file = "—Ç–æ–ø–ª–∏–≤–æ/15.10.2025 11_24_18 –û—Ç—á—ë—Ç –æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è—Ö.xlsx"
    if not os.path.exists(krassula_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {krassula_file}")
        return False
    
    if not analyzer.load_krassula_data(krassula_file):
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ö—Ä–∞—Å—Å—É–ª—ã!")
        return False
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(analyzer.krassula_data)} –∑–∞–ø–∏—Å–µ–π")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ì–õ–û–ù–ê–°–°
    print("\n–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ì–õ–û–ù–ê–°–°...")
    glonass_file = "—Ç–æ–ø–ª–∏–≤–æ/–í—Å–µ_–¢–°-–ò–ü_–°–µ—Ä–∫–∏–Ω_9)_–ì—Ä—É–ø–ø–æ–≤–æ–π_–æ—Ç—á–µ—Ç_–ø–æ_–∑–∞–ø—Ä–∞–≤–∫–∞–º_–∏_—Å–ª–∏–≤–∞–º_15.10.2025_12-26-52.xlsx"
    if not os.path.exists(glonass_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {glonass_file}")
        return False
    
    if not analyzer.load_glonass_data(glonass_file):
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ì–õ–û–ù–ê–°–°!")
        return False
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(analyzer.glonass_refuel_data)} –∑–∞–ø—Ä–∞–≤–æ–∫ –∏ {len(analyzer.glonass_drain_data)} —Å–ª–∏–≤–æ–≤")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–∞—Ä—Ç –∏ –º–∞—à–∏–Ω
    print("\n–ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –∫–∞—Ä—Ç –∏ –º–∞—à–∏–Ω...")
    mapping_file = "—Ç–æ–ø–ª–∏–≤–æ/—Ç–æ–ø–ª–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã –ø–æ –º–∞—à–∏–Ω–∞–º.xlsx"
    if not os.path.exists(mapping_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {mapping_file}")
        return False
    
    if not analyzer.load_card_mapping_from_file(mapping_file):
        print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π!")
        return False
    print(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(analyzer.card_to_vehicle_mapping)} —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π")
    
    print("\n2. –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–•")
    print("-" * 50)
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞—Ä—Ç—ã –∏–∑ –ö—Ä–∞—Å—Å—É–ª—ã
    krassula_cards = set()
    for card_full in analyzer.krassula_data['–ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã'].unique():
        if pd.notna(card_full):
            card_num = analyzer._extract_card_number(str(card_full))
            if card_num:
                krassula_cards.add(card_num)
    
    print(f"–ö–∞—Ä—Ç –≤ –¥–∞–Ω–Ω—ã—Ö –ö—Ä–∞—Å—Å—É–ª—ã (—Ç–æ–ø–ª–∏–≤–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã): {len(krassula_cards)}")
    print(f"–ö–∞—Ä—Ç –≤ —Ñ–∞–π–ª–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π: {len(analyzer.card_to_vehicle_mapping)}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏—è
    matched_cards = krassula_cards.intersection(set(analyzer.card_to_vehicle_mapping.keys()))
    print(f"–ü–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π: {len(matched_cards)}")
    
    if len(matched_cards) == 0:
        print("\nüìã –û–ë–™–Ø–°–ù–ï–ù–ò–ï –†–ï–ó–£–õ–¨–¢–ê–¢–ê:")
        print("   –í —Ç–µ–∫—É—â–µ–º –ø–µ—Ä–∏–æ–¥–µ –ø–æ –∫–∞—Ä—Ç–∞–º –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏")
        print("   –Ω–µ –±—ã–ª–æ –∑–∞–ø—Ä–∞–≤–æ–∫ —Ç–æ–ø–ª–∏–≤–æ–º. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–∞—è —Å–∏—Ç—É–∞—Ü–∏—è.")
        print("   –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        
        print("\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–∞–≤–æ–∫ —Ç–æ–ø–ª–∏–≤–æ–º –≤ –ø–µ—Ä–∏–æ–¥–µ: {len(analyzer.krassula_data)}")
        print(f"   ‚Ä¢ –ö–∞—Ä—Ç –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –≤ —Ñ–∞–π–ª–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π: {len(analyzer.card_to_vehicle_mapping)}")
        print(f"   ‚Ä¢ –ö–∞—Ä—Ç, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –±—ã–ª–∏ –∑–∞–ø—Ä–∞–≤–∫–∏: {len(krassula_cards)}")
        print(f"   ‚Ä¢ –°–æ–≤–ø–∞–¥–µ–Ω–∏–π: {len(matched_cards)}")
        
        print("\nüí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–ò:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö –ö—Ä–∞—Å—Å—É–ª—ã —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å –ø–µ—Ä–∏–æ–¥–æ–º –ì–õ–û–ù–ê–°–°")
        print("   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤ —Ñ–∞–π–ª–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–π —É–∫–∞–∑–∞–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã")
        print("   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–∞—Ä—Ç—ã –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –∑–∞–ø—Ä–∞–≤–æ–∫")
        
        # –°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏
        print("\n3. –°–û–ó–î–ê–ù–ò–ï –û–¢–ß–ï–¢–ê")
        print("-" * 50)
        print("–°–æ–∑–¥–∞–µ–º –æ—Ç—á–µ—Ç —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏...")
        
        # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ (–¥–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π)
        results = analyzer.match_refuels()
        
        # –°–æ–∑–¥–∞–µ–º Excel –æ—Ç—á–µ—Ç
        output_file = "—Ç–µ—Å—Ç_–æ—Ç—á–µ—Ç_—Ä–∞—Å—Ö–æ–¥_—Ç–æ–ø–ª–∏–≤–∞.xlsx"
        if analyzer.create_excel_report(results, output_file):
            print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {output_file}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if os.path.exists(output_file):
                file_size = os.path.getsize(output_file)
                print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:,} –±–∞–π—Ç")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞")
            return False
        
    else:
        print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(matched_cards)} —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π!")
        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–∞ —Ç–æ–ø–ª–∏–≤–∞...")
        
        # –°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
        print("\n3. –°–û–ü–û–°–¢–ê–í–õ–ï–ù–ò–ï –î–ê–ù–ù–´–•")
        print("-" * 50)
        print("–°–æ–ø–æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–∞–≤–∫–∏...")
        
        results = analyzer.match_refuels()
        
        if results:
            print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(results)} –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π")
            
            # –°–æ–∑–¥–∞–µ–º Excel –æ—Ç—á–µ—Ç
            print("\n4. –°–û–ó–î–ê–ù–ò–ï –û–¢–ß–ï–¢–ê")
            print("-" * 50)
            print("–°–æ–∑–¥–∞–µ–º Excel –æ—Ç—á–µ—Ç...")
            
            output_file = "—Ç–µ—Å—Ç_–æ—Ç—á–µ—Ç_—Ä–∞—Å—Ö–æ–¥_—Ç–æ–ø–ª–∏–≤–∞.xlsx"
            if analyzer.create_excel_report(results, output_file):
                print(f"‚úÖ –û—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω: {output_file}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                if os.path.exists(output_file):
                    file_size = os.path.getsize(output_file)
                    print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size:,} –±–∞–π—Ç")
            else:
                print("‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ—Ç—á–µ—Ç–∞")
                return False
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–ø–æ—Å—Ç–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
            return False
    
    print("\n" + "=" * 80)
    print("           –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    print("=" * 80)
    return True

if __name__ == "__main__":
    success = test_final_program()
    if success:
        print("\nüéâ –ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
    else:
        print("\n‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã")
